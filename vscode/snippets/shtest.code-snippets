{
  "Step Block": {
    "prefix": "step",
    "body": [
      "Etape: $1",
      "Action: $2 ; Résultat: $3"
    ],
    "description": "Create a new step with action and result"
  },
  "Action Result": {
    "prefix": "action",
    "body": [
      "Action: $1 ; Résultat: $2"
    ],
    "description": "Create an action with result"
  },
  "Execute Script": {
    "prefix": "exec",
    "body": [
      "Action: Exécuter $1 ; Résultat: retour 0."
    ],
    "description": "Execute a script with success validation"
  },
  "Execute Script with Output": {
    "prefix": "execout",
    "body": [
      "Action: Exécuter $1 ; Résultat: retour 0 et stdout contient \"$2\"."
    ],
    "description": "Execute a script with output validation"
  },
  "Create File": {
    "prefix": "createfile",
    "body": [
      "Action: Créer le fichier $1 ; Résultat: le fichier est présent."
    ],
    "description": "Create a file with validation"
  },
  "Create File with Permissions": {
    "prefix": "createfileperm",
    "body": [
      "Action: Créer le fichier $1 avec les droits $2 ; Résultat: le fichier est présent."
    ],
    "description": "Create a file with specific permissions"
  },
  "Create Directory": {
    "prefix": "createdir",
    "body": [
      "Action: Créer le dossier $1 ; Résultat: le dossier est créé."
    ],
    "description": "Create a directory with validation"
  },
  "Copy File": {
    "prefix": "copyfile",
    "body": [
      "Action: Copier le fichier $1 vers $2 ; Résultat: le fichier est copié."
    ],
    "description": "Copy a file with validation"
  },
  "Touch File": {
    "prefix": "touch",
    "body": [
      "Action: Toucher le fichier $1 -t $2 ; Résultat: date modifiée."
    ],
    "description": "Touch a file with timestamp"
  },
  "Compare Files": {
    "prefix": "compare",
    "body": [
      "Action: Comparer le fichier $1 avec $2 ; Résultat: fichiers identiques."
    ],
    "description": "Compare two files"
  },
  "SQL Connection": {
    "prefix": "sqlconn",
    "body": [
      "Action: Définir la variable SQL_DRIVER = $1 ; Résultat: identifiants configurés.",
      "Action: Définir la variable SQL_CONN = $2 ; Résultat: identifiants configurés."
    ],
    "description": "Set up SQL connection variables"
  },
  "Execute SQL Script": {
    "prefix": "sqlscript",
    "body": [
      "Action: Exécuter le script SQL $1 ; Résultat: La base est prête."
    ],
    "description": "Execute a SQL script"
  },
  "Variable Assignment": {
    "prefix": "var",
    "body": [
      "Action: Définir la variable $1 = $2 ; Résultat: variable configurée."
    ],
    "description": "Define a variable"
  },
  "Check File Exists": {
    "prefix": "fileexists",
    "body": [
      "Action: Vérifier que le fichier $1 existe ; Résultat: le fichier existe."
    ],
    "description": "Check if a file exists"
  },
  "Check Directory Exists": {
    "prefix": "direxists",
    "body": [
      "Action: Vérifier que le dossier $1 existe ; Résultat: le dossier existe."
    ],
    "description": "Check if a directory exists"
  },
  "Check File Content": {
    "prefix": "filecontent",
    "body": [
      "Action: Vérifier que le fichier $1 contient \"$2\" ; Résultat: contenu correct."
    ],
    "description": "Check file content"
  },
  "Check No Errors": {
    "prefix": "noerrors",
    "body": [
      "Action: Vérifier qu'aucune erreur n'apparaît ; Résultat: aucun message d'erreur."
    ],
    "description": "Check for no errors"
  },
  "Complex Validation": {
    "prefix": "complex",
    "body": [
      "Action: $1 ; Résultat: $2 et ($3 ou $4)."
    ],
    "description": "Complex validation with logical operators"
  },
  "Update File Date": {
    "prefix": "updatedate",
    "body": [
      "Action: Mettre à jour la date du fichier $1 $2 ; Résultat: date modifiée."
    ],
    "description": "Update file date"
  },
  "Empty Directory": {
    "prefix": "emptydir",
    "body": [
      "Action: Vider le répertoire $1 ; Résultat: le dossier est prêt."
    ],
    "description": "Empty a directory"
  },
  "Check Logs": {
    "prefix": "checklogs",
    "body": [
      "Action: Indiquer le chemin des logs = $1 ; Résultat: les logs sont accessibles."
    ],
    "description": "Check log files"
  },
  "Execute with Arguments": {
    "prefix": "execargs",
    "body": [
      "Action: Exécuter $1 avec l'argument $2=$3 ; Résultat: retour 0."
    ],
    "description": "Execute script with arguments"
  },
  "Check File Permissions": {
    "prefix": "checkperm",
    "body": [
      "Action: Vérifier que le fichier $1 a les droits $2 ; Résultat: les droits sont corrects."
    ],
    "description": "Check file permissions"
  },
  "Check Directory Content": {
    "prefix": "checkdircontent",
    "body": [
      "Action: Vérifier que le dossier $1 contient $2 fichiers $3 ; Résultat: le contenu est correct."
    ],
    "description": "Check directory content"
  },
  "Check File Date": {
    "prefix": "checkdate",
    "body": [
      "Action: Vérifier que la date du fichier $1 est $2 ; Résultat: la date est correcte."
    ],
    "description": "Check file date"
  },
  "Display File Content": {
    "prefix": "display",
    "body": [
      "Action: Afficher le contenu du fichier $1 ; Résultat: le contenu est affiché."
    ],
    "description": "Display file content"
  },
  "Legacy Patterns": {
    "prefix": "legacy",
    "body": [
      "# Legacy patterns for backward compatibility",
      "catalogue_01: Action: Afficher le contenu du fichier = /tmp/JDD_Commun.sql ; Résultat: Le contenu est affiché.",
      "catalogue_02: Action: Afficher le contenu du fichier = /tmp/JDD_Extra.sql ; Résultat: Le script est affiché.",
      "catalogue_03: Action: Afficher le contenu du fichier = /tmp/file.txt ; Résultat: Le contenu est correct.",
      "catalogue_04: Action: Afficher le contenu du fichier = /tmp/file.txt ; Résultat: contenu correct.",
      "catalogue_05: Action: Afficher le contenu du fichier = /tmp/output.txt ; Résultat: Le contenu est correct.",
      "catalogue_06: Action: Afficher le contenu du fichier = /tmp/test.txt ; Résultat: Le contenu est affiché.",
      "catalogue_07: Action: Afficher le contenu du fichier = /tmp/test.txt ; Résultat: Le script est affiché.",
      "catalogue_08: Action: Afficher le contenu du fichier = /tmp/test.txt ; Résultat: contenu affiché.",
      "catalogue_09: Action: Afficher le contenu du fichier = /tmp/test.txt ; Résultat: le contenu est lisible.",
      "catalogue_10: Action: Afficher le contenu du fichier = /tmp/test_folder/test.txt ; Résultat: le contenu est lisible.",
      "catalogue_11: Action: Copier le dossier /tmp/data vers /tmp/backup ; Résultat: le dossier est copié.",
      "catalogue_12: Action: Copier le fichier /tmp/src.txt vers /tmp/dest.txt ; Résultat: le fichier est copié.",
      "catalogue_13: Action: Créer le dossier = /tmp/data avec les droits = 0755 ; Résultat: Le dossier est créé.",
      "catalogue_14: Action: Créer le dossier = /tmp/newdir ; Résultat: Le dossier est créé.",
      "catalogue_15: Action: Créer le dossier = /tmp/newdir ; Résultat: dossier créé.",
      "catalogue_16: Action: Créer le dossier = /tmp/newdir ; Résultat: le dossier est prêt.",
      "catalogue_17: Action: Créer dossier = /tmp/test_folder avec les droits = 0700 ; Résultat: le dossier est prêt.",
      "catalogue_18: Action: Créer fichier = /tmp/output.txt avec les droits = 0644 ; Résultat: Le fichier est présent.",
      "catalogue_19: Action: Créer fichier = /tmp/test_folder/test.txt avec les droits = 0600 ; Résultat: le fichier est créé.",
      "catalogue_20: Action: Définir la variable SQL_CONN = sqlplus -S user/password@db ; Résultat: Les identifiants sont configurés.",
      "catalogue_21: Action: Définir la variable SQL_CONN = sqlplus -S user/password@db ; Résultat: identifiants configurés.",
      "catalogue_22: Action: Exécuter /opt/batch/traitement.sh ; Résultat: Le script retourne un code 0 et (La sortie standard contient \"OK\" ou La sortie d'erreur contient WARNING).",
      "catalogue_23: Action: Exécuter /opt/batch/traitement.sh ; Résultat: retour 0 et (la sortie standard contient \"Succès complet\" ou la sortie d'erreur contient WARNING).",
      "catalogue_24: Action: Exécuter /opt/batch/traitement.sh ; Résultat: retour 0 et (stdout contient \"OK\" ou stderr contient WARNING).",
      "catalogue_25: Action: Exécuter /opt/batch/traitement.sh avec l'argument produit=123 et la quantité=10 ; Résultat: retour 0.",
      "catalogue_26: Action: Exécuter /opt/batch/traitement.sh avec l'argument produit=567 et la quantité=20 ; Résultat: retour 0 et (stdout contient \"Traitement OK\" ou stderr contient WARNING).",
      "catalogue_27: Action: Exécuter le script SQL JDD_Commun.sql ; Résultat: La base de test est prête.",
      "catalogue_28: Action: Exécuter le script SQL JDD_Commun.sql puis JDD_Extra.sql ; Résultat: La base est prête pour le test.",
      "catalogue_29: Action: Exécuter script.sh ; Résultat: La base de test est prête.",
      "catalogue_30: Action: Exécuter script.sh ; Résultat: La base est prête pour le test.",
      "catalogue_31: Action: Exécuter script.sh ; Résultat: Le fichier /tmp/a.txt est identique a /tmp/b.txt.",
      "catalogue_32: Action: Exécuter script.sh ; Résultat: Le fichier /tmp/a.txt est identique à /tmp/b.txt.",
      "catalogue_33: Action: Exécuter script.sh ; Résultat: base prête.",
      "catalogue_34: Action: Exécuter script.sh ; Résultat: fichier_identique /tmp/a.txt /tmp/b.txt.",
      "catalogue_35: Action: Indiquer le chemin des logs = /var/log/sys.log ; Résultat: les logs sont accessibles.",
      "catalogue_36: Action: Indiquer le chemin des logs = /var/log/sys.log ; Résultat: logs accessibles.",
      "catalogue_37: Action: Indiquer le chemin des logs = /var/log/system.log ; Résultat: les logs sont accessibles.",
      "catalogue_38: Action: Mettre à jour la date du fichier /tmp/file.txt 202501010101 ; Résultat: La date est modifiée.",
      "catalogue_39: Action: Mettre à jour la date du fichier /tmp/file.txt 202501010101 ; Résultat: date modifiée.",
      "catalogue_40: Action: Mettre à jour la date du fichier /tmp/output.txt 202501021200 ; Résultat: La date est modifiée.",
      "catalogue_41: Action: Toucher le fichier /tmp/init.flag 202501010000 ; Résultat: Le fichier est initialisé.",
      "catalogue_42: Action: Vider le répertoire /tmp/cache ; Résultat: le dossier est prêt.",
      "catalogue_43: Action: Vérifier qu'aucune erreur n'apparaît ; Résultat: le script affiche un code \"030\".",
      "catalogue_44: Action: Vérifier qu'il n'y a pas d'erreur ; Résultat: aucun message d'erreur.",
      "catalogue_45: Action: Vérifier qu'il n'y a pas d'erreur ; Résultat: stderr=.",
      "catalogue_46: Action: Vérifier qu'il n'y a pas d'erreurs dans les logs ; Résultat: aucun message d'erreur.",
      "catalogue_47: Action: Vérifier que la date du fichier /tmp/test.log est 202501010000 ; Résultat: la date du fichier /tmp/test.log est 202501010000.",
      "catalogue_48: Action: Vérifier que le dossier /tmp/testdir a les droits 0755 ; Résultat: le dossier /tmp/testdir a les droits 0755.",
      "catalogue_49: Action: Vérifier que le dossier /tmp/testdir contient 2 fichiers *.txt ; Résultat: le dossier /tmp/testdir contient 2 fichiers *.txt.",
      "catalogue_50: Action: Vérifier que le dossier /tmp/testdir existe ; Résultat: le dossier /tmp/testdir existe."
    ],
    "description": "Legacy patterns for backward compatibility"
  }
}
