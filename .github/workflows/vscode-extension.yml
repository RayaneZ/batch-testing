name: VS Code Extension

on:
  push:
    branches: [ main, develop ]
    paths: [ 'vscode/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'vscode/**' ]

jobs:
  build-extension:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: vscode/package-lock.json

      - name: Install dependencies
        run: |
          cd vscode
          npm ci

      - name: Build extension
        run: |
          cd vscode
          npm run compile

      - name: Run extension tests
        run: |
          cd vscode
          npm test

      - name: Install vsce
        run: npm install -g @vscode/vsce@latest

      - name: Package extension
        run: |
          cd vscode
          vsce package -o ../knightbatch-shtest.vsix

      - name: Upload extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: knightbatch-shtest.vsix
          path: knightbatch-shtest.vsix

  test-extension:
    runs-on: ubuntu-latest
    needs: build-extension
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Download extension
        uses: actions/download-artifact@v4
        with:
          name: knightbatch-shtest.vsix
          path: vscode/

      - name: Install VS Code
        run: |
          wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
          sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
          sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
          sudo apt-get update
          sudo apt-get install -y code

      - name: Install extension
        run: |
          code --install-extension vscode/knightbatch-shtest.vsix

      - name: Test extension functionality
        run: |
          # Test that extension loads without errors
          code --list-extensions | grep knightbatch-shtest

  lint-extension:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: vscode/package-lock.json

      - name: Install dependencies
        run: |
          cd vscode
          npm ci

      - name: Run ESLint
        run: |
          cd vscode
          npm run lint

      - name: Check TypeScript
        run: |
          cd vscode
          npx tsc --noEmit

  validate-extension:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install vsce
        run: npm install -g @vscode/vsce@latest

      - name: Validate extension
        run: |
          cd vscode
          vsce package --no-dependencies
          vsce show

      - name: Check extension manifest
        run: |
          cd vscode
          node -e "
            const pkg = require('./package.json');
            const required = ['name', 'displayName', 'description', 'version', 'engines', 'contributes'];
            const missing = required.filter(field => !pkg[field]);
            if (missing.length > 0) {
              console.error('Missing required fields:', missing);
              process.exit(1);
            }
            console.log('Extension manifest is valid');
          " 
      - name: Extract plugin patterns (if plugins dir exists)
        run: |
          if [ -d src/shtest_compiler/plugins ]; then
            cd vscode
            npx ts-node src/extractPluginPatterns.ts
          else
            echo "No plugins directory found, skipping pattern extraction."
          fi 