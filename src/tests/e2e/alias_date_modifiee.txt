ENTRYPOINT DEBUG ACTIVE: src/shtest_compiler/shtest.py loaded
[DEBUG] Loaded patterns: ['step', 'action_result', 'action_only', 'result_only', 'comment']
[DEBUG] Pattern for step: ^(?:Étape|Etape|Step)\s*:\s*(.*)$
[DEBUG] Pattern for action_result: ^Action\s*:\s*(.*?)(?:\s*;\s*(?:R[ée]sultat|Resultat)\s*:\s*(.*)|\s*R[ée]sultat\s*:\s*(.*))$
[DEBUG] Pattern for action_only: ^Action\s*:\s*(.*)$
[DEBUG] Pattern for result_only: ^R[ée]sultat\s*:\s*(.*)$
[DEBUG] Pattern for comment: ^\s*#.*$
[DEBUG] Added STEP tokenizer with pattern: ^(?:Étape|Etape|Step)\s*:\s*(.*)$
[DEBUG] Added ACTION_RESULT tokenizer with pattern: ^Action\s*:\s*(.*?)(?:\s*;\s*(?:R[ée]sultat|Resultat)\s*:\s*(.*)|\s*R[ée]sultat\s*:\s*(.*))$
[DEBUG] Added ACTION_ONLY tokenizer with pattern: ^Action\s*:\s*(.*)$
[DEBUG] Added RESULT_ONLY tokenizer with pattern: ^R[ée]sultat\s*:\s*(.*)$
[DEBUG] Added COMMENT tokenizer with pattern: ^\s*#.*$
[DEBUG] Added FallbackTokenizer
[DEBUG] Parsing text with 2 lines
[DEBUG] Lexing text with 2 lines
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: Mettre à jour la date du fichier /tmp/file.txt 202501010101 ; Résultat: date modifiée. at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=Mettre à jour la date du fichier /tmp/file.txt 202501010101, result=('Mettre à jour la date du fichier /tmp/file.txt 202501010101', 'date modifiée.', None), original=Action: Mettre à jour la date du fichier /tmp/file.txt 202501010101 ; Résultat: date modifiée. at line 1
[DEBUG] Yielding token: ACTION_RESULT@1:0 'Mettre à jour la date du fichier /tmp/file.txt 202501010101' -> '('Mettre à jour la date du fichier /tmp/file.txt 202501010101', 'date modifiée.', None)'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: Mettre à jour la date du fichier /tmp/file.txt 202501010101 ; Résultat: La date est modifiée. at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=Mettre à jour la date du fichier /tmp/file.txt 202501010101, result=('Mettre à jour la date du fichier /tmp/file.txt 202501010101', 'La date est modifiée.', None), original=Action: Mettre à jour la date du fichier /tmp/file.txt 202501010101 ; Résultat: La date est modifiée. at line 1
[DEBUG] Yielding token: ACTION_RESULT@1:0 'Mettre à jour la date du fichier /tmp/file.txt 202501010101' -> '('Mettre à jour la date du fichier /tmp/file.txt 202501010101', 'La date est modifiée.', None)'
[DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
[DEBUG] Yielding token: EMPTY@1:0 ''
[DEBUG] Got 3 tokens
[DEBUG] Grammar: _merge_action_result called with 3 tokens
[DEBUG] Grammar: Token 0: kind=ACTION_RESULT, value='Mettre à jour la date du fichier /tmp/file.txt 202501010101'
[DEBUG] Grammar: Token 1: kind=ACTION_RESULT, value='Mettre à jour la date du fichier /tmp/file.txt 202501010101'
[DEBUG] Grammar: Token 2: kind=EMPTY, value=''
[DEBUG] Grammar: _merge_action_result returning 3 tokens
[DEBUG] compile_atomic called with: expected='date modifiée', varname='result', last_file_var=None, extracted_args=None, action_context={'command': 'Mettre à jour la date du fichier /tmp/file.txt 202501010101'}
[DEBUG] canonize_validation result: {'phrase': 'Date modifiée', 'handler': 'date_modified', 'scope': 'last_action', 'pattern_entry': {'phrase': 'Date modifiée', 'handler': 'date_modified', 'scope': 'last_action', 'opposite': {'phrase': 'Date inchangée'}, 'aliases': ['date modifiée', 'La date est modifiée', 'date modifiee', '^date modifiée$', '^la date est modifiée$', '^date modifiee$']}, 'params': {}}
[DEBUG] Trying to extract parameters from action command: 'Mettre à jour la date du fichier /tmp/file.txt 202501010101'
[DEBUG] Trying to import core handler: shtest_compiler.core.handlers.date_modified
[DEBUG] Core handler returned: ValidationCheck(expected='date_modified', actual_cmd="echo 'ERROR: Missing file or date for date_modified validation'", handler='date_modified', scope='last_action', params={'scope': 'last_action', 'canonical_phrase': 'Date modifiée', 'varname': 'result', 'last_file_var': None})
[DEBUG] compile_atomic called with: expected='La date est modifiée', varname='result', last_file_var=None, extracted_args=None, action_context={'command': 'Mettre à jour la date du fichier /tmp/file.txt 202501010101'}
[DEBUG] canonize_validation result: {'phrase': 'La date est modifiée', 'handler': 'date_modified', 'scope': 'last_action', 'pattern_entry': {'phrase': 'Date modifiée', 'handler': 'date_modified', 'scope': 'last_action', 'opposite': {'phrase': 'Date inchangée'}, 'aliases': ['date modifiée', 'La date est modifiée', 'date modifiee', '^date modifiée$', '^la date est modifiée$', '^date modifiee$']}, 'params': {}}
[DEBUG] Trying to extract parameters from action command: 'Mettre à jour la date du fichier /tmp/file.txt 202501010101'
[DEBUG] Trying to import core handler: shtest_compiler.core.handlers.date_modified
[DEBUG] Core handler returned: ValidationCheck(expected='date_modified', actual_cmd="echo 'ERROR: Missing file or date for date_modified validation'", handler='date_modified', scope='last_action', params={'scope': 'last_action', 'canonical_phrase': 'La date est modifiée', 'varname': 'result', 'last_file_var': None})
Compiled tests/to_implement/alias_date_modifiee.shtest -> tests\to_implement\alias_date_modifiee.sh
