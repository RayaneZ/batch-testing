ENTRYPOINT DEBUG ACTIVE: src/shtest_compiler/shtest.py loaded
[DEBUG] Loaded patterns: ['step', 'action_result', 'action_only', 'result_only', 'comment']
[DEBUG] Pattern for step: ^(?:Étape|Etape|Step)\s*:\s*(.*)$
[DEBUG] Pattern for action_result: ^Action\s*:\s*(.*?)(?:\s*;\s*(?:R[ée]sultat|Resultat)\s*:\s*(.*)|\s*R[ée]sultat\s*:\s*(.*))$
[DEBUG] Pattern for action_only: ^Action\s*:\s*(.*)$
[DEBUG] Pattern for result_only: ^R[ée]sultat\s*:\s*(.*)$
[DEBUG] Pattern for comment: ^\s*#.*$
[DEBUG] Added STEP tokenizer with pattern: ^(?:Étape|Etape|Step)\s*:\s*(.*)$
[DEBUG] Added ACTION_RESULT tokenizer with pattern: ^Action\s*:\s*(.*?)(?:\s*;\s*(?:R[ée]sultat|Resultat)\s*:\s*(.*)|\s*R[ée]sultat\s*:\s*(.*))$
[DEBUG] Added ACTION_ONLY tokenizer with pattern: ^Action\s*:\s*(.*)$
[DEBUG] Added RESULT_ONLY tokenizer with pattern: ^R[ée]sultat\s*:\s*(.*)$
[DEBUG] Added COMMENT tokenizer with pattern: ^\s*#.*$
[DEBUG] Added FallbackTokenizer
[DEBUG] Parsing text with 13 lines
[DEBUG] Lexing text with 13 lines
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=# Test with invalid validation combinations at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=# Test with invalid validation combinations at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=# Test with invalid validation combinations at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=# Test with invalid validation combinations at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.COMMENT, value=# Test with invalid validation combinations, result=None, original=# Test with invalid validation combinations at line 1
[DEBUG] Yielding token: COMMENT@1:0 '# Test with invalid validation combinations'
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.STEP, value=Test conflicting validations, result=('Test conflicting validations',), original=Étape: Test conflicting validations at line 1
[DEBUG] Yielding token: STEP@1:0 'Test conflicting validations' -> '('Test conflicting validations',)'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: echo "test" at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: echo "test" at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_ONLY, value=echo "test", result=('echo "test"',), original=  Action: echo "test" at line 1
[DEBUG] Yielding token: ACTION_ONLY@1:0 'echo "test"' -> '('echo "test"',)'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 0 at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 0 at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 0 at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 0 at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 0 at line 1
[DEBUG] Yielding token: TEXT@1:0 'Vérifier: Le code de retour est 0'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 1  # Conflicting validation at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 1  # Conflicting validation at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 1  # Conflicting validation at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 1  # Conflicting validation at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est 1  # Conflicting validation at line 1
[DEBUG] Yielding token: TEXT@1:0 'Vérifier: Le code de retour est 1  # Conflicting validation'
[DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
[DEBUG] Yielding token: EMPTY@1:0 ''
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.STEP, value=Test invalid validation parameters, result=('Test invalid validation parameters',), original=Étape: Test invalid validation parameters at line 1
[DEBUG] Yielding token: STEP@1:0 'Test invalid validation parameters' -> '('Test invalid validation parameters',)'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: echo "test" at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: echo "test" at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_ONLY, value=echo "test", result=('echo "test"',), original=  Action: echo "test" at line 1
[DEBUG] Yielding token: ACTION_ONLY@1:0 'echo "test"' -> '('echo "test"',)'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est abc  # Invalid parameter (should be number) at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est abc  # Invalid parameter (should be number) at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est abc  # Invalid parameter (should be number) at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est abc  # Invalid parameter (should be number) at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le code de retour est abc  # Invalid parameter (should be number) at line 1
[DEBUG] Yielding token: TEXT@1:0 'Vérifier: Le code de retour est abc  # Invalid parameter (should be number)'
[DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
[DEBUG] Yielding token: EMPTY@1:0 ''
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.STEP, value=Test missing validation parameters, result=('Test missing validation parameters',), original=Étape: Test missing validation parameters at line 1
[DEBUG] Yielding token: STEP@1:0 'Test missing validation parameters' -> '('Test missing validation parameters',)'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: echo "test" at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: echo "test" at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_ONLY, value=echo "test", result=('echo "test"',), original=  Action: echo "test" at line 1
[DEBUG] Yielding token: ACTION_ONLY@1:0 'echo "test"' -> '('echo "test"',)'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le contenu affiché contient  # Missing parameter at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le contenu affiché contient  # Missing parameter at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le contenu affiché contient  # Missing parameter at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le contenu affiché contient  # Missing parameter at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Vérifier: Le contenu affiché contient  # Missing parameter at line 1
[DEBUG] Yielding token: TEXT@1:0 'Vérifier: Le contenu affiché contient  # Missing parameter'
[DEBUG] Got 13 tokens
[DEBUG] Grammar: _merge_action_result called with 13 tokens
[DEBUG] Grammar: Token 0: kind=COMMENT, value='# Test with invalid validation combinations'
[DEBUG] Grammar: Token 1: kind=STEP, value='Test conflicting validations'
[DEBUG] Grammar: Token 2: kind=ACTION_ONLY, value='echo "test"'
[DEBUG] Grammar: Token 3: kind=TEXT, value='Vérifier: Le code de retour est 0'
[DEBUG] Grammar: Token 4: kind=TEXT, value='Vérifier: Le code de retour est 1  # Conflicting validation'
[DEBUG] Grammar: Token 5: kind=EMPTY, value=''
[DEBUG] Grammar: Token 6: kind=STEP, value='Test invalid validation parameters'
[DEBUG] Grammar: Token 7: kind=ACTION_ONLY, value='echo "test"'
[DEBUG] Grammar: Token 8: kind=TEXT, value='Vérifier: Le code de retour est abc  # Invalid parameter (should be number)'
[DEBUG] Grammar: Token 9: kind=EMPTY, value=''
[DEBUG] Grammar: Token 10: kind=STEP, value='Test missing validation parameters'
[DEBUG] Grammar: Token 11: kind=ACTION_ONLY, value='echo "test"'
[DEBUG] Grammar: Token 12: kind=TEXT, value='Vérifier: Le contenu affiché contient  # Missing parameter'
[DEBUG] Grammar: _merge_action_result returning 13 tokens
Compiled C:\Users\Sventer\OneDrive\Documents\batch testing\src\tests\e2e\ko\invalid_validation_combinations.shtest -> C:\Users\Sventer\OneDrive\Documents\batch testing\src\tests\e2e\ko\invalid_validation_combinations.sh
