ENTRYPOINT DEBUG ACTIVE: src/shtest_compiler/shtest.py loaded
[DEBUG] Loaded patterns: ['step', 'action_result', 'action_only', 'result_only', 'comment']
[DEBUG] Pattern for step: ^(?:Étape|Etape|Step)\s*:\s*(.*)$
[DEBUG] Pattern for action_result: ^Action\s*:\s*(.*?)(?:\s*;\s*(?:R[ée]sultat|Resultat)\s*:\s*(.*)|\s*R[ée]sultat\s*:\s*(.*))$
[DEBUG] Pattern for action_only: ^Action\s*:\s*(.*)$
[DEBUG] Pattern for result_only: ^R[ée]sultat\s*:\s*(.*)$
[DEBUG] Pattern for comment: ^\s*#.*$
[DEBUG] Added STEP tokenizer with pattern: ^(?:Étape|Etape|Step)\s*:\s*(.*)$
[DEBUG] Added ACTION_RESULT tokenizer with pattern: ^Action\s*:\s*(.*?)(?:\s*;\s*(?:R[ée]sultat|Resultat)\s*:\s*(.*)|\s*R[ée]sultat\s*:\s*(.*))$
[DEBUG] Added ACTION_ONLY tokenizer with pattern: ^Action\s*:\s*(.*)$
[DEBUG] Added RESULT_ONLY tokenizer with pattern: ^R[ée]sultat\s*:\s*(.*)$
[DEBUG] Added COMMENT tokenizer with pattern: ^\s*#.*$
[DEBUG] Added FallbackTokenizer
[DEBUG] Parsing text with 3 lines
[DEBUG] Lexing text with 3 lines
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: Créer le dossier = /tmp/newdir ; Résultat: dossier créé. at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=Créer le dossier = /tmp/newdir, result=('Créer le dossier = /tmp/newdir', 'dossier créé.', None), original=Action: Créer le dossier = /tmp/newdir ; Résultat: dossier créé. at line 1
[DEBUG] Yielding token: ACTION_RESULT@1:0 'Créer le dossier = /tmp/newdir' -> '('Créer le dossier = /tmp/newdir', 'dossier créé.', None)'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: Créer le dossier = /tmp/newdir ; Résultat: Le dossier est créé. at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=Créer le dossier = /tmp/newdir, result=('Créer le dossier = /tmp/newdir', 'Le dossier est créé.', None), original=Action: Créer le dossier = /tmp/newdir ; Résultat: Le dossier est créé. at line 1
[DEBUG] Yielding token: ACTION_RESULT@1:0 'Créer le dossier = /tmp/newdir' -> '('Créer le dossier = /tmp/newdir', 'Le dossier est créé.', None)'
[DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: Créer le dossier = /tmp/newdir ; Résultat: le dossier est prêt. at line 1
[DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=Créer le dossier = /tmp/newdir, result=('Créer le dossier = /tmp/newdir', 'le dossier est prêt.', None), original=Action: Créer le dossier = /tmp/newdir ; Résultat: le dossier est prêt. at line 1
[DEBUG] Yielding token: ACTION_RESULT@1:0 'Créer le dossier = /tmp/newdir' -> '('Créer le dossier = /tmp/newdir', 'le dossier est prêt.', None)'
[DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
[DEBUG] Yielding token: EMPTY@1:0 ''
[DEBUG] Got 4 tokens
[DEBUG] Grammar: _merge_action_result called with 4 tokens
[DEBUG] Grammar: Token 0: kind=ACTION_RESULT, value='Créer le dossier = /tmp/newdir'
[DEBUG] Grammar: Token 1: kind=ACTION_RESULT, value='Créer le dossier = /tmp/newdir'
[DEBUG] Grammar: Token 2: kind=ACTION_RESULT, value='Créer le dossier = /tmp/newdir'
[DEBUG] Grammar: Token 3: kind=EMPTY, value=''
[DEBUG] Grammar: _merge_action_result returning 4 tokens
[DEBUG] compile_atomic called with: expected='dossier créé', varname='result', last_file_var=None, extracted_args=None, action_context={'command': 'Créer le dossier = /tmp/newdir'}
[DEBUG] canonize_validation result: {'phrase': 'dossier créé', 'handler': 'dir_ready', 'scope': 'last_action', 'pattern_entry': {'phrase': 'Le dossier est prêt', 'handler': 'dir_ready', 'scope': 'last_action', 'opposite': {'phrase': 'Le dossier est absent'}, 'aliases': ['le dossier est prêt', 'dossier prêt', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est present', 'dossier present', 'le dossier est vide', 'dossier vide', '^le dossier est prêt$', '^dossier prêt$', '^le dossier est cree$', '^dossier cree$', '^le dossier est créé$', '^dossier créé$', '^le dossier est present$', '^dossier present$', '^le dossier est vide$', '^dossier vide$']}, 'params': {}}
[DEBUG] Trying to extract parameters from action command: 'Créer le dossier = /tmp/newdir'
[DEBUG] Trying to import core handler: shtest_compiler.core.handlers.dir_ready
[DEBUG] Core handler ImportError: No module named 'shtest_compiler.core.handlers.dir_ready'
[DEBUG] compile_atomic called with: expected='Le dossier est créé', varname='result', last_file_var=None, extracted_args=None, action_context={'command': 'Créer le dossier = /tmp/newdir'}
[DEBUG] canonize_validation result: {'phrase': 'le dossier est créé', 'handler': 'dir_ready', 'scope': 'last_action', 'pattern_entry': {'phrase': 'Le dossier est prêt', 'handler': 'dir_ready', 'scope': 'last_action', 'opposite': {'phrase': 'Le dossier est absent'}, 'aliases': ['le dossier est prêt', 'dossier prêt', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est present', 'dossier present', 'le dossier est vide', 'dossier vide', '^le dossier est prêt$', '^dossier prêt$', '^le dossier est cree$', '^dossier cree$', '^le dossier est créé$', '^dossier créé$', '^le dossier est present$', '^dossier present$', '^le dossier est vide$', '^dossier vide$']}, 'params': {}}
[DEBUG] Trying to extract parameters from action command: 'Créer le dossier = /tmp/newdir'
[DEBUG] Trying to import core handler: shtest_compiler.core.handlers.dir_ready
[DEBUG] Core handler ImportError: No module named 'shtest_compiler.core.handlers.dir_ready'
[DEBUG] compile_atomic called with: expected='le dossier est prêt', varname='result', last_file_var=None, extracted_args=None, action_context={'command': 'Créer le dossier = /tmp/newdir'}
[DEBUG] canonize_validation result: {'phrase': 'Le dossier est prêt', 'handler': 'dir_ready', 'scope': 'last_action', 'pattern_entry': {'phrase': 'Le dossier est prêt', 'handler': 'dir_ready', 'scope': 'last_action', 'opposite': {'phrase': 'Le dossier est absent'}, 'aliases': ['le dossier est prêt', 'dossier prêt', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est present', 'dossier present', 'le dossier est vide', 'dossier vide', '^le dossier est prêt$', '^dossier prêt$', '^le dossier est cree$', '^dossier cree$', '^le dossier est créé$', '^dossier créé$', '^le dossier est present$', '^dossier present$', '^le dossier est vide$', '^dossier vide$']}, 'params': {}}
[DEBUG] Trying to extract parameters from action command: 'Créer le dossier = /tmp/newdir'
[DEBUG] Trying to import core handler: shtest_compiler.core.handlers.dir_ready
[DEBUG] Core handler ImportError: No module named 'shtest_compiler.core.handlers.dir_ready'
Compiled C:\Users\Sventer\OneDrive\Documents\batch testing\src\tests\to_implement\alias_dossier_cree.shtest -> C:\Users\Sventer\OneDrive\Documents\batch testing\src\tests\to_implement\alias_dossier_cree.sh
