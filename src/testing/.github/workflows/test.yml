name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install shellcheck (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck

    - name: Install shellcheck (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Check if WSL is available
        wsl --version || echo "WSL not available, skipping shellcheck"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run unit tests
      working-directory: src
      run: |
        python -m pytest testing/tests/unit/ -v --cov=shtest_compiler --cov-report=xml

    - name: Compile E2E tests
      working-directory: src
      run: |
        python -m shtest_compiler.run_all --input testing/tests/e2e --output testing/tests/integration

    - name: Run shellcheck on compiled scripts (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      working-directory: src
      run: |
        for test in testing/tests/integration/*.sh; do
          if [ -f "$test" ]; then
            echo "Checking $test..."
            shellcheck --shell=bash --severity=style "$test"
          fi
        done

    - name: Run shellcheck on compiled scripts (Windows)
      if: matrix.os == 'windows-latest'
      working-directory: src
      run: |
        # Try to run shellcheck via WSL if available
        for test in testing/tests/integration/*.sh; do
          if [ -f "$test" ]; then
            echo "Checking $test..."
            wsl shellcheck --shell=bash --severity=style "$test" || echo "Shellcheck failed or WSL not available"
          fi
        done

    - name: Run integration tests (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      working-directory: src
      run: |
        for test in testing/tests/integration/*.sh; do
          if [ -f "$test" ]; then
            echo "Running $test..."
            bash "$test"
          fi
        done

    - name: Run integration tests (Windows)
      if: matrix.os == 'windows-latest'
      working-directory: src
      run: |
        # Try to run via WSL if available
        for test in testing/tests/integration/*.sh; do
          if [ -f "$test" ]; then
            echo "Running $test..."
            wsl bash "$test" || echo "Test failed or WSL not available"
          fi
        done

    - name: Run code quality checks
      working-directory: src
      run: |
        echo "No code quality checks (flake8 removed)"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: src/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-suite:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install shellcheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run comprehensive test suite
      working-directory: src
      run: |
        python testing/test_suite.py --project-root .

    - name: Upload test reports
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: test_reports/
        retention-days: 30 