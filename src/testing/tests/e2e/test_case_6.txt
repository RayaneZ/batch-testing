2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] ENTRYPOINT DEBUG ACTIVE: src/shtest_compiler/shtest.py loaded
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Loaded patterns: ['step', 'action_result', 'action_only', 'result_only', 'comment']
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Pattern for step: ^(?:Étape|Etape|Step)\s*:\s*(.*)$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Pattern for action_result: ^Action\s*:\s*(.*?)(?:\s*;\s*(?:R[ée]sultat|Resultat)\s*:\s*(.*)|\s*R[ée]sultat\s*:\s*(.*))$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Pattern for action_only: ^Action\s*:\s*(.*)$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Pattern for result_only: ^R[ée]sultat\s*:\s*(.*)$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Pattern for comment: ^\s*#.*$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Added STEP tokenizer with pattern: ^(?:Étape|Etape|Step)\s*:\s*(.*)$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Added ACTION_RESULT tokenizer with pattern: ^Action\s*:\s*(.*?)(?:\s*;\s*(?:R[ée]sultat|Resultat)\s*:\s*(.*)|\s*R[ée]sultat\s*:\s*(.*))$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Added ACTION_ONLY tokenizer with pattern: ^Action\s*:\s*(.*)$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Added RESULT_ONLY tokenizer with pattern: ^R[ée]sultat\s*:\s*(.*)$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Added COMMENT tokenizer with pattern: ^\s*#.*$
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Added FallbackTokenizer
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Parsing text with 13 lines
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Lexing text with 13 lines
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.STEP, value=Préparation, result=('Préparation',), original=Étape: Préparation at line 1
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: STEP@1:0 'Préparation' -> '('Préparation',)'
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: EMPTY@1:0 ''
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: copier le fichier /tmp/src.txt vers /tmp/dest.txt ; Résultat: Le fichier est copié at line 1
2025-07-14T12:25:45.640824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=copier le fichier /tmp/src.txt vers /tmp/dest.txt, result=('copier le fichier /tmp/src.txt vers /tmp/dest.txt', 'Le fichier est copié', None), original=Action: copier le fichier /tmp/src.txt vers /tmp/dest.txt ; Résultat: Le fichier est copié at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: ACTION_RESULT@1:0 'copier le fichier /tmp/src.txt vers /tmp/dest.txt' -> '('copier le fichier /tmp/src.txt vers /tmp/dest.txt', 'Le fichier est copié', None)'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: copier le dossier /tmp/data vers /tmp/backup ; Résultat: Le dossier est copié at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=copier le dossier /tmp/data vers /tmp/backup, result=('copier le dossier /tmp/data vers /tmp/backup', 'Le dossier est copié', None), original=Action: copier le dossier /tmp/data vers /tmp/backup ; Résultat: Le dossier est copié at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: ACTION_RESULT@1:0 'copier le dossier /tmp/data vers /tmp/backup' -> '('copier le dossier /tmp/data vers /tmp/backup', 'Le dossier est copié', None)'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: EMPTY@1:0 ''
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.STEP, value=Exécution, result=('Exécution',), original=Étape: Exécution at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: STEP@1:0 'Exécution' -> '('Exécution',)'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: EMPTY@1:0 ''
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: exécuter /opt/batch/traitement.sh ; Résultat: retour 0 et (stdout contient Succès complet ou stderr contient WARNING) at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=exécuter /opt/batch/traitement.sh, result=('exécuter /opt/batch/traitement.sh', 'retour 0 et (stdout contient Succès complet ou stderr contient WARNING)', None), original=Action: exécuter /opt/batch/traitement.sh ; Résultat: retour 0 et (stdout contient Succès complet ou stderr contient WARNING) at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: ACTION_RESULT@1:0 'exécuter /opt/batch/traitement.sh' -> '('exécuter /opt/batch/traitement.sh', 'retour 0 et (stdout contient Succès complet ou stderr contient WARNING)', None)'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: EMPTY@1:0 ''
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.STEP, value=Vérification, result=('Vérification',), original=Étape: Vérification at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: STEP@1:0 'Vérification' -> '('Vérification',)'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: EMPTY@1:0 ''
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: vérifier que le fichier /tmp/dest.txt existe ; Résultat: Le fichier est présent et (Le fichier /tmp/dest.txt existe ou stderr contient Erreur de copie) at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=vérifier que le fichier /tmp/dest.txt existe, result=('vérifier que le fichier /tmp/dest.txt existe', 'Le fichier est présent et (Le fichier /tmp/dest.txt existe ou stderr contient Erreur de copie)', None), original=Action: vérifier que le fichier /tmp/dest.txt existe ; Résultat: Le fichier est présent et (Le fichier /tmp/dest.txt existe ou stderr contient Erreur de copie) at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: ACTION_RESULT@1:0 'vérifier que le fichier /tmp/dest.txt existe' -> '('vérifier que le fichier /tmp/dest.txt existe', 'Le fichier est présent et (Le fichier /tmp/dest.txt existe ou stderr contient Erreur de copie)', None)'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding TEXT token value=Action: vérifier qu'aucune erreur n'apparaît ; Résultat: Le script affiche un code "030" at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding token type=TokenType.ACTION_RESULT, value=vérifier qu'aucune erreur n'apparaît, result=("vérifier qu'aucune erreur n'apparaît", 'Le script affiche un code "030"', None), original=Action: vérifier qu'aucune erreur n'apparaît ; Résultat: Le script affiche un code "030" at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: ACTION_RESULT@1:0 'vérifier qu'aucune erreur n'apparaît' -> '("vérifier qu'aucune erreur n'apparaît", 'Le script affiche un code "030"', None)'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] RegexTokenizer.tokenize: Yielding EMPTY token at line 1
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Yielding token: EMPTY@1:0 ''
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Got 14 tokens
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: _merge_action_result called with 14 tokens
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 0: kind=STEP, value='Préparation'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 1: kind=EMPTY, value=''
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 2: kind=ACTION_RESULT, value='copier le fichier /tmp/src.txt vers /tmp/dest.txt'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 3: kind=ACTION_RESULT, value='copier le dossier /tmp/data vers /tmp/backup'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 4: kind=EMPTY, value=''
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 5: kind=STEP, value='Exécution'
2025-07-14T12:25:45.641825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 6: kind=EMPTY, value=''
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 7: kind=ACTION_RESULT, value='exécuter /opt/batch/traitement.sh'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 8: kind=EMPTY, value=''
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 9: kind=STEP, value='Vérification'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 10: kind=EMPTY, value=''
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 11: kind=ACTION_RESULT, value='vérifier que le fichier /tmp/dest.txt existe'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 12: kind=ACTION_RESULT, value='vérifier qu'aucune erreur n'apparaît'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: Token 13: kind=EMPTY, value=''
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Grammar: _merge_action_result returning 14 tokens
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] get_action_shell_command called with: 'copier le fichier /tmp/src.txt vers /tmp/dest.txt'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Loaded 21 action patterns
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Processing action 'copier le fichier /tmp/src.txt vers /tmp/dest.txt' (normalized: 'copier le fichier /tmp/src.txt vers /tmp/dest.txt')
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking pattern 'Créer le dossier {path}' with handler 'create_dir'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex pattern '(?i)^Créer\ le\ dossier\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'créer un dossier {path}'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^créer\ un\ dossier\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'faire un dossier {path}'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^faire\ un\ dossier\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'nouveau dossier {path}'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^nouveau\ dossier\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'cr[ée]er le dossier (.+)'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias '^mkdir (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex alias '^mkdir (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking pattern 'Supprimer le dossier {path}' with handler 'delete_dir'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex pattern '(?i)^Supprimer\ le\ dossier\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'effacer le dossier {path}'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^effacer\ le\ dossier\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'enlever le dossier {path}'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^enlever\ le\ dossier\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'retirer le dossier {path}'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^retirer\ le\ dossier\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias '^rm -rf (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex alias '^rm -rf (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking pattern 'Copier le dossier {src} vers {dest}' with handler 'copy_dir'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex pattern '(?i)^Copier\ le\ dossier\ (.+)\ vers\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'dupliquer le dossier {src} vers {dest}'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^dupliquer\ le\ dossier\ (.+)\ vers\ (.+)$'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'copier le dossier {src} à {dest}'
2025-07-14T12:25:45.642825Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^copier\ le\ dossier\ (.+)\ à\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias '^cp -r (.+) (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex alias '^cp -r (.+) (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking pattern 'Déplacer le dossier {src} vers {dest}' with handler 'move_dir'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex pattern '(?i)^Déplacer\ le\ dossier\ (.+)\ vers\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'déplacer le dossier {src} à {dest}'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^déplacer\ le\ dossier\ (.+)\ à\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias '^mv (.+) (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex alias '^mv (.+) (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking pattern 'Purger le répertoire {path}' with handler 'purge_dir'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex pattern '(?i)^Purger\ le\ répertoire\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'vider le répertoire {path}'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^vider\ le\ répertoire\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'nettoyer le répertoire {path}'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^nettoyer\ le\ répertoire\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias '^rm -rf (.+)/\\*$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex alias '^rm -rf (.+)/\\*$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking pattern 'Créer le fichier {path}' with handler 'create_file'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex pattern '(?i)^Créer\ le\ fichier\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'créer un fichier {path}'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^créer\ un\ fichier\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'faire un fichier {path}'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^faire\ un\ fichier\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'générer le fichier {path}'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^générer\ le\ fichier\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'nouveau fichier {path}'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^nouveau\ fichier\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'cr[ée]er le fichier (.+)'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias '^touch (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex alias '^touch (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking pattern 'Supprimer le fichier {path}' with handler 'delete_file'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex pattern '(?i)^Supprimer\ le\ fichier\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'effacer le fichier {path}'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^effacer\ le\ fichier\ (.+)$'
2025-07-14T12:25:45.643824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'enlever le fichier {path}'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^enlever\ le\ fichier\ (.+)$'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias 'retirer le fichier {path}'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing alias regex '(?i)^retirer\ le\ fichier\ (.+)$'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking alias '^rm (.+)$'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex alias '^rm (.+)$'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Checking pattern 'Copier le fichier {src} vers {dest}' with handler 'copy_file'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Testing regex pattern '(?i)^Copier\ le\ fichier\ (.+)\ vers\ (.+)$'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] canonize_action: Found match with pattern 'Copier le fichier {src} vers {dest}'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] get_action_shell_command: canonize_action matched handler 'copy_file' for phrase 'Copier le fichier {src} vers {dest}'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] get_action_shell_command: context={'action': 'copier le fichier /tmp/src.txt vers /tmp/dest.txt', 'handler': 'copy_file', 'category': 'file_operations', 'variables': {'src': '/tmp/src.txt', 'dest': '/tmp/dest.txt'}, 'requirements': {'required_variables': ['src', 'dest'], 'optional_variables': [], 'scope': 'global', 'description': 'Copy a file from source to destination', 'category': 'file_operations', 'validation_rules': {'src': {'type': 'path', 'required': True}, 'dest': {'type': 'path', 'required': True}}}, 'patterns_matched': [{'type': 'phrase', 'pattern': 'Copier le fichier {src} vers {dest}', 'config': {'type': 'action', 'phrase': 'Copier le fichier {src} vers {dest}', 'aliases': ['dupliquer le fichier {src} vers {dest}', 'copier le fichier {src} à {dest}', '^cp (.+) (.+)$', 'copier le fichier {src} vers {dest}'], 'handler': 'copy_file'}}], 'scope': 'global'}
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] get_action_shell_command: handler=copy_file, variables={'src': '/tmp/src.txt', 'dest': '/tmp/dest.txt'}
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] get_action_shell_command: Trying action handler: shtest_compiler.core.action_handlers.copy_file
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] get_action_shell_command: Calling action handler with params={'context': {'action': 'copier le fichier /tmp/src.txt vers /tmp/dest.txt', 'handler': 'copy_file', 'category': 'file_operations', 'variables': {'src': '/tmp/src.txt', 'dest': '/tmp/dest.txt'}, 'requirements': {'required_variables': ['src', 'dest'], 'optional_variables': [], 'scope': 'global', 'description': 'Copy a file from source to destination', 'category': 'file_operations', 'validation_rules': {'src': {'type': 'path', 'required': True}, 'dest': {'type': 'path', 'required': True}}}, 'patterns_matched': [{'type': 'phrase', 'pattern': 'Copier le fichier {src} vers {dest}', 'config': {'type': 'action', 'phrase': 'Copier le fichier {src} vers {dest}', 'aliases': ['dupliquer le fichier {src} vers {dest}', 'copier le fichier {src} à {dest}', '^cp (.+) (.+)$', 'copier le fichier {src} vers {dest}'], 'handler': 'copy_file'}}], 'scope': 'global'}, 'src': '/tmp/src.txt', 'dest': '/tmp/dest.txt'}
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] get_action_shell_command: Action handler returned=<shtest_compiler.core.action_handlers.copy_file.CopyFileAction object at 0x00000132ED087E90>
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] get_action_shell_command: Generated shell command: cp '/tmp/src.txt' '/tmp/dest.txt'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] compile_validation_expression called with: 'Le fichier est copié'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] compile_validation_expression: Detected atomic expression, using compile_atomic
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] compile_atomic called with: expected='Le fichier est copié', varname='result', last_file_var=None, extracted_args=None, action_context={'command': 'copier le fichier /tmp/src.txt vers /tmp/dest.txt'}
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] compile_atomic: Trying to canonize validation: 'Le fichier est copié'
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] compile_atomic: canonize_validation('Le fichier est copié') result: {'phrase': 'Le fichier est copié', 'handler': 'file_copied', 'scope': 'last_action', 'pattern_entry': {'phrase': 'Le fichier est copié', 'handler': 'file_copied', 'scope': 'last_action', 'opposite': {'phrase': "Le fichier n'est pas copié"}, 'aliases': ['le fichier est copié', 'fichier copié', '^le fichier est copié$', '^fichier copié$']}, 'params': {}}
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] extract_context_from_action result: {'action': 'Le fichier est copié', 'handler': 'file_copied', 'category': 'validation', 'variables': {}, 'requirements': {'required_variables': [], 'optional_variables': [], 'scope': 'last_action', 'description': 'Check if file was copied', 'category': 'validation', 'validation_rules': {}}, 'patterns_matched': [], 'scope': 'last_action'}
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Final params for handler: {}
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [PIPELINE_ERROR] [ERROR] ImportError: Handler 'dir_ready' (is_action=False) not found in core or plugins.
To implement this handler, create a Python file named 'dir_ready.py' 
in the appropriate directory: 
'shtest_compiler/core/handlers' for core, 
or 'shtest_compiler/plugins/<your_plugin>/handlers' for plugins. 
The handler should define a 'handle(params)' function.
Pattern entry for reference: {'phrase': 'Le dossier est prêt', 'handler': 'dir_ready', 'scope': 'last_action', 'opposite': {'phrase': 'Le dossier est absent'}, 'aliases': ['le dossier est prêt', 'dossier prêt', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est present', 'dossier present', 'le dossier est vide', 'dossier vide', '^le dossier est prêt$', '^dossier prêt$', '^le dossier est cree$', '^dossier cree$', '^le dossier est créé$', '^dossier créé$', '^le dossier est present$', '^dossier present$', '^le dossier est vide$', '^dossier vide$']}
Traceback (most recent call last):
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\command_loader.py", line 91, in find_handler
    mod = importlib.import_module(
          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64__qbz5n2kfra8p0\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'shtest_compiler.core.handlers.dir_ready'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\compiler\shell_generator.py", line 136, in visit
    shellframework_ast = ShtestToShellFrameworkVisitor().visit(node)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\ast\visitor.py", line 26, in visit
    return visitor_method(node)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\ast\shtest_to_shellframework_visitor.py", line 250, in visit_shtestfile
    validation_lines = self.compile_validation_expression(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\ast\shtest_to_shellframework_visitor.py", line 357, in compile_validation_expression
    return compile_atomic(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\compiler\atomic_compiler.py", line 95, in compile_atomic
    handler_registry, _, _ = build_registry()
                             ^^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\command_loader.py", line 132, in build_registry
    handler_registry[entry["handler"]] = find_handler(
                                         ^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\command_loader.py", line 121, in find_handler
    raise ImportError(error_msg)
ImportError: Handler 'dir_ready' (is_action=False) not found in core or plugins.
To implement this handler, create a Python file named 'dir_ready.py' 
in the appropriate directory: 
'shtest_compiler/core/handlers' for core, 
or 'shtest_compiler/plugins/<your_plugin>/handlers' for plugins. 
The handler should define a 'handle(params)' function.
Pattern entry for reference: {'phrase': 'Le dossier est prêt', 'handler': 'dir_ready', 'scope': 'last_action', 'opposite': {'phrase': 'Le dossier est absent'}, 'aliases': ['le dossier est prêt', 'dossier prêt', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est present', 'dossier present', 'le dossier est vide', 'dossier vide', '^le dossier est prêt$', '^dossier prêt$', '^le dossier est cree$', '^dossier cree$', '^le dossier est créé$', '^dossier créé$', '^le dossier est present$', '^dossier present$', '^le dossier est vide$', '^dossier vide$']}

2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] [ERROR] ImportError: Handler 'dir_ready' (is_action=False) not found in core or plugins.
To implement this handler, create a Python file named 'dir_ready.py' 
in the appropriate directory: 
'shtest_compiler/core/handlers' for core, 
or 'shtest_compiler/plugins/<your_plugin>/handlers' for plugins. 
The handler should define a 'handle(params)' function.
Pattern entry for reference: {'phrase': 'Le dossier est prêt', 'handler': 'dir_ready', 'scope': 'last_action', 'opposite': {'phrase': 'Le dossier est absent'}, 'aliases': ['le dossier est prêt', 'dossier prêt', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est present', 'dossier present', 'le dossier est vide', 'dossier vide', '^le dossier est prêt$', '^dossier prêt$', '^le dossier est cree$', '^dossier cree$', '^le dossier est créé$', '^dossier créé$', '^le dossier est present$', '^dossier present$', '^le dossier est vide$', '^dossier vide$']}
2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Traceback (most recent call last):
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\command_loader.py", line 91, in find_handler
    mod = importlib.import_module(
          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.2544.0_x64__qbz5n2kfra8p0\Lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1140, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'shtest_compiler.core.handlers.dir_ready'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\compiler\shell_generator.py", line 136, in visit
    shellframework_ast = ShtestToShellFrameworkVisitor().visit(node)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\ast\visitor.py", line 26, in visit
    return visitor_method(node)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\ast\shtest_to_shellframework_visitor.py", line 250, in visit_shtestfile
    validation_lines = self.compile_validation_expression(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\ast\shtest_to_shellframework_visitor.py", line 357, in compile_validation_expression
    return compile_atomic(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\compiler\atomic_compiler.py", line 95, in compile_atomic
    handler_registry, _, _ = build_registry()
                             ^^^^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\command_loader.py", line 132, in build_registry
    handler_registry[entry["handler"]] = find_handler(
                                         ^^^^^^^^^^^^^
  File "C:\Users\Sventer\OneDrive\Documents\batch testing\src\shtest_compiler\command_loader.py", line 121, in find_handler
    raise ImportError(error_msg)
ImportError: Handler 'dir_ready' (is_action=False) not found in core or plugins.
To implement this handler, create a Python file named 'dir_ready.py' 
in the appropriate directory: 
'shtest_compiler/core/handlers' for core, 
or 'shtest_compiler/plugins/<your_plugin>/handlers' for plugins. 
The handler should define a 'handle(params)' function.
Pattern entry for reference: {'phrase': 'Le dossier est prêt', 'handler': 'dir_ready', 'scope': 'last_action', 'opposite': {'phrase': 'Le dossier est absent'}, 'aliases': ['le dossier est prêt', 'dossier prêt', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est cree', 'dossier cree', 'le dossier est créé', 'dossier créé', 'le dossier est present', 'dossier present', 'le dossier est vide', 'dossier vide', '^le dossier est prêt$', '^dossier prêt$', '^le dossier est cree$', '^dossier cree$', '^le dossier est créé$', '^dossier créé$', '^le dossier est present$', '^dossier present$', '^le dossier est vide$', '^dossier vide$']}

2025-07-14T12:25:45.644824Z DESKTOP-19SQ3SL shtest_compiler[19956]: [DEBUG] Compiled C:\Users\Sventer\OneDrive\Documents\batch testing\src\testing\tests\e2e\test_case_6.shtest -> C:\Users\Sventer\OneDrive\Documents\batch testing\src\testing\tests\e2e\test_case_6.sh
